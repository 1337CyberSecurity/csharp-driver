os:
  - ubuntu/trusty64
cassandra:
  - dse-4.8
  - dse-5.0
  - dse-5.1
env:
  CSHARP_VERSION:
    - mono
    - netcore
build:
  - script: |
      export CASSANDRA_VERSION=$CCM_CASSANDRA_VERSION
      export JAVA_HOME=$CCM_JAVA_HOME
      export CCM_PATH=$HOME/ccm
      export DSE_INITIAL_IPPREFIX="127.0.0."
      export DSE_BRANCH=$CCM_BRANCH
      export DSE_VERSION=$CCM_VERSION
      export DSE_IN_REMOTE_SERVER="false"

      echo $DSE_VERSION
      echo $DSE_PATH
      echo $DSE_INITIAL_IPPREFIX
      echo $CSHARP_VERSION

      echo "==========installing saxon parser==========="
      sudo apt-get install -y libsaxon-java

      export SCASSANDRA_JAR=$HOME/scassandra-server_2.11-1.0.10-standalone.jar 
      ./build/scassandra_install.sh

      echo "==========copying ssl files to $HOME/ssl=========="
      cp -r /home/jenkins/ccm/ssl $HOME/ssl
 
      if [ $CSHARP_VERSION = 'mono' ]; then
          echo "==========csharp dse mono=========="
          # Define alias for Nuget
          nuget() {
                mono /home/jenkins/nuget/NuGet.exe "$@"
          }
          export -f nuget
          # Install the required packages
          export EnableNuGetPackageRestore=true
          nuget restore src/Dse.sln
          nuget install NUnit.Runners -Version 3.4.1 -OutputDirectory testrunner
          # Compile the driver and test code
          xbuild /p:Configuration=Release /v:m /p:restorepackages=false /p:DynamicConstants=LINUX src/Dse.sln
          # Run the tests
          echo "==========RUNNING SHORT SUITE OF TESTS=========="
          mono ./testrunner/NUnit.ConsoleRunner.3.4.1/tools/nunit3-console.exe src/Dse.Test.Integration/bin/Release/Dse.Test.Integration.dll --where:cat=short --labels=All --result:"TestResult_nunit3.xml"

      else
          echo "==========csharp dse netcore=========="
          # Install the required packages
          dotnet restore

          # Run the tests
          echo "==========RUNNING SHORT SUITE OF TESTS=========="
          pushd src/Dse.Test.Integration
          dotnet test -f netcoreapp1.0 --work=../../ --where:cat=short --result=TestResult_nunit3.xml --trace=DEBUG
          popd
      fi
      echo "==========parsing nunit3 report================"
      saxon-xslt -o TestResult.xml TestResult_nunit3.xml build/nunit3-xunit.xslt
  - xunit:
    - "TestResult.xml"
