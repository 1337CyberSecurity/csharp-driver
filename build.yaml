os:
  - ubuntu/bionic64/csharp-driver
cassandra:
  - dse-4.8
  - dse-5.0
  - dse-5.1
  - dse-6.0
env:
  CSHARP_VERSION:
    - mono
    - netcore
build:
  - script: |
      # Set the Java paths (for CCM)
      export JAVA_HOME=$CCM_JAVA_HOME
      export PATH=$JAVA_HOME/bin:$PATH
      export SIMULACRON_PATH=$HOME/simulacron.jar
      export CCM_PATH=$HOME/ccm
      export DSE_INITIAL_IPPREFIX="127.0.0."
      export DSE_BRANCH=$CCM_BRANCH
      export DSE_VERSION=$CCM_VERSION
      export DSE_IN_REMOTE_SERVER="false"

      if [ $DSE_VERSION = '6.0' ]; then
          echo "Setting DSE 6.0 install-dir"
          export DSE_PATH=$CCM_INSTALL_DIR
      fi
      
      echo $DSE_VERSION
      echo $DSE_PATH
      echo $DSE_INITIAL_IPPREFIX
      echo $CSHARP_VERSION

      # Define Cassandra runtime
      echo "========== Setting Server Version =========="
      export CASSANDRA_VERSION=$CCM_CASSANDRA_VERSION

      echo "========== Copying ssl files to $HOME/ssl =========="
      cp -r /home/jenkins/ccm/ssl $HOME/ssl

      # Download and uncompress saxon
      mkdir saxon
      curl -L -o saxon/SaxonHE9-8-0-12J.zip https://downloads.sourceforge.net/project/saxon/Saxon-HE/9.8/SaxonHE9-8-0-12J.zip
      unzip saxon/SaxonHE9-8-0-12J.zip -d saxon
 
      if [ $CSHARP_VERSION = 'mono' ]; then
          echo "========== Starting Mono Build =========="
          mono --version
          # Define alias for Nuget
          nuget() {
                mono /usr/local/bin/nuget.exe "$@"
          }
          export -f nuget

          # Install the required packages
          export EnableNuGetPackageRestore=true
          msbuild /t:restore /v:m src/Dse.sln
          nuget install NUnit.Runners -Version 3.6.1 -OutputDirectory testrunner

          # Compile the driver and test code
          msbuild /p:Configuration=Release /v:m /p:DynamicConstants=LINUX src/Dse.sln

          # Run the tests
          echo "==========RUNNING FULL SUITE OF TESTS=========="
          mono ./testrunner/NUnit.ConsoleRunner.3.6.1/tools/nunit3-console.exe src/Dse.Test.Integration/bin/Release/net452/Dse.Test.Integration.dll --where:cat=short --labels=All --result:"TestResult_nunit3.xml"
          java -jar saxon/saxon9he.jar -o:TestResult.xml TestResult_nunit3.xml tools/nunit3-xunit.xslt
      else
          echo "========== Starting .NET Core SDK Build =========="
          export DOTNET_CLI_TELEMETRY_OPTOUT=1
          dotnet --version

          # Install the required packages
          dotnet restore src

          # Run the tests
          echo "==========RUNNING FULL SUITE OF TESTS=========="
          dotnet test src/Dse.Test.Integration/Dse.Test.Integration.csproj -f netcoreapp2.0 -c Release --filter TestCategory=short --logger "trx;LogFileName=../../../TestResult_trx.xml"
          java -jar saxon/saxon9he.jar -o:TestResult.xml TestResult_trx.xml tools/trx-to-junit.xslt
      fi

  - xunit:
    - "TestResult.xml"

